import numpy as np
import pandas as pd
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler

# Sample dataset with correlated features
data = pd.DataFrame({
    'Feature_A': [10, 20, 30, 40, 50],
    'Feature_B': [11, 21, 29, 41, 52]  # Highly correlated with Feature_A
})

# Standardize data
scaler = StandardScaler()
data_scaled = scaler.fit_transform(data)

# Apply PCA
pca = PCA(n_components=2)
principal_components = pca.fit_transform(data_scaled)

# Convert to DataFrame
pca_df = pd.DataFrame(principal_components, columns=['PC1', 'PC2'])

print("Original Correlation:\n", data.corr())  # Correlated features
print("\nPCA Transformed Correlation:\n", pca_df.corr())  # Uncorrelated features
